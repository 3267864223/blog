<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="blog.mapper.ArticleMapper">

	<sql id="t_columns">
	    article_id, article_user_id, article_title, article_content, article_view_count, article_comment_count, article_like_count, 
	    article_is_comment, article_status, article_order, article_update_time, article_create_time, article_summary
    </sql>
    
    <sql id="s_columns">
	    article_user_id, article_title, article_content, article_view_count, article_comment_count, article_like_count, 
	    article_is_comment, article_status, article_order,article_update_time,article_create_time
    </sql>
	
	<select id="getArticleByStatus"  resultType="Article">
		select <include refid="t_columns" /> from article where article_status=1 order by article_update_time desc limit #{n}
	</select> 
	
	<insert id="insertDraftSubmit"  parameterType="Article">
		insert into article (<include refid="s_columns" />) values(#{articleUserId},#{articleTitle},#{articleContent},0,0,0,1,#{articleStatus},1,#{articleUpdateTime},#{articleCreateTime})
	</insert> 
	
	<select id="getAllArticle"  resultType="Article">
		select <include refid="t_columns" /> from article order by article_id desc
	</select> 
	
	<resultMap type="Article" id="ArticleCate">
    	<id property="articleId" column="article_id" />
    	<collection property="categoryList" ofType="category" >
    		<id property="categoryId" column="category_id" />
    		<result property="categoryName" column="category_name" />
    	</collection>
    </resultMap>
	<select id="getArticleCate"  resultMap="ArticleCate">
		select c.article_id,temp.category_id,temp.category_name from article c left join (select a.*,b.category_name from article_category_ref a left join category b on a.category_id=b.category_id)temp on c.article_id=temp.article_id
	</select> 
	
	<!-- 添加文章 -->
	<insert id="addArticle"  parameterType="Article" useGeneratedKeys="true" keyProperty="articleId">
	    insert into article
        (article_user_id, article_title,article_content,
        article_is_comment, article_status, article_order,
        article_summary,article_update_time,article_create_time)
        values (#{articleUserId}, #{articleTitle},
        #{articleContent}, #{articleIsComment},
        #{articleStatus}, #{articleOrder},
        #{articleSummary},#{articleUpdateTime},#{articleCreateTime})
	</insert>
	
	<!-- 添加文章和分类的对应关系 -->
	<insert id="addArticleCategory">
		insert into article_category_ref (article_id,category_id) values (#{articleId},#{categoryId})
	</insert>
	
	<!-- 添加文章和标签的对应关系 -->
	<insert id="addArticleTag">
		insert into article_tag_ref (article_id,tag_id) values (#{articleId},#{tagId})
	</insert>
	
	<select id="getArticleById"  resultType="Article">
		select <include refid="t_columns" /> from article where article_id=#{articleId}
	</select> 
	
	<select id="getArticleCateById"  resultType="Category">
		select a.article_id,b.* from article_category_ref a left join category b on a.category_id=b.category_id where article_id=#{articleId}
	</select> 

	<select id="getArticleTagById"  resultType="Tag">
		select a.article_id,b.* from article_tag_ref a left join tag b on a.tag_id=b.tag_id where article_id=#{articleId}
	</select> 
	
	<update id="updateArticle"  parameterType="Article">
		update article set article_title=#{articleTitle},article_content=#{articleContent},
		article_status=#{articleStatus},article_summary=#{articleSummary},article_update_time=#{articleUpdateTime} where article_id=#{articleId}
	</update>
	
	<delete id="deleteArticleCategory">
		delete from article_category_ref where article_id=#{articleId}
	</delete>
	
	<delete id="deleteArticleTag">
		delete from article_tag_ref where article_id=#{articleId}
	</delete>
	
	<delete id="deleteArticleById">
		delete from article where article_id=#{articleId}
	</delete>
	
	<select id="getAllDraf"  resultType="Article">
		select <include refid="t_columns" /> from article where article_status=0 order by article_id desc 
	</select> 

</mapper>